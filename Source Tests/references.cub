do
  val a := 100
  var b := a

  assert a == 100
  assert b == 100

  a = 200

  assert a == 200
  assert b == 100
end

do
  val a : int = 100
  var b : int = a

  assert a == 100
  assert b == 100

  b = 200

  assert a == 100
  assert b == 200
end

do
  val a := 'hello'
  var b := a

  assert a == 'hello'
  assert b == 'hello'

  b = 'world'

  assert a == 'hello'
  assert b == 'world'
end

# Duplicate references.
do
  val a := 100
  var b := a
  var c := b

  assert a == 100
  assert b == 100
  assert c == 100

  c = 200

  assert a == 100
  assert b == 200
  assert c == 200
end

do
  val a := 1
  function foo(out x : int)
    x = 100
  end

  assert a == 1
  foo(a)
  assert a == 100
end